plasmaB_bmi_lm
plasmaB_bmi <- mutate(plasmaB_bmi, yhat = predict(plasmaB_bmi_lm))
head(plasmaB_bmi)
plasmaB_bmi <- mutate(plasmaB_bmi, e = plasmaB_bmi_lm$residuals)
glimpse(plasmaB_bmi)
plasmaB_elims <- max(abs(plasmaB_bmi$e))*c(-1, 1)
plasmaB_elims
ggplot(data = plasmaB_bmi, aes(x = yhat, y = e)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_smooth() +
expand_limits(y = plasmaB_elims) +
xlab("Predicted plasma β-carotene (ng/ml)") +
ylab("Residual") +
labs(tag = "B") +
labs(title = "Residuals vs predicted values Y-hat")
ggplot(data = plasmaB_bmi, aes(x = yhat, y = e)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_smooth() +
expand_limits(y = plasmaB_elims) +
xlab("Predicted plasma β-carotene (ng/ml)") +
ylab("Residual") +
labs(tag = "B") +
labs(title = "Residuals vs predicted values Y-hat")
#### Make a Q-Q-plot and a histogram for the residuals.
ggplot(data = plasmaB_bmi, aes(sample = e)) +
geom_qq(size = 3) + geom_qq_line() +
labs(tag = "C") +
labs(title = "Normal Q-Q-plot of the residuals")
#### Make a Q-Q-plot and a histogram for the residuals.
ggplot(data = plasmaB_bmi, aes(sample = e)) +
geom_qq(size = 3) + geom_qq_line() +
labs(tag = "C") +
labs(title = "Normal Q-Q-plot of the residuals model 1")
ggplot(data = plasmaB_bmi, aes(x = e)) +
geom_bar() + scale_x_binned()
ggplot(data = plasmaB_bmi, aes(x = e)) +
geom_bar() + scale_x_binned() +
labs(title = "Histogram for the residuals model 1")
logplasmaB_bmi_lm <- lm(log(betaplasma) ~ bmi, data = plasmaB_bmi)
logplasmaB_bmi_lm
logplasmaB_bmi <- plasmaB_bmi %>% mutate(logbetaplasma = log(plasmaB_bmi$betaplasma))
logplasmaB_bmi$yhat <- NULL
logplasmaB_bmi$e <- NULL
logplasmaB_bmi
logplasmaB_bmi <- mutate(logplasmaB_bmi, yhat = predict(logplasmaB_bmi_lm))
head(logplasmaB_bmi)
logplasmaB_bmi <- mutate(logplasmaB_bmi, e = logplasmaB_bmi_lm$residuals)
glimpse(logplasmaB_bmi)
logplasmaB_elims <- max(abs(logplasmaB_bmi$e))*c(-1, 1)
logplasmaB_elims
ggplot(data = logplasmaB_bmi, aes(x = yhat, y = e)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_smooth() +
expand_limits(y = logplasmaB_elims) +
xlab("Logarithm predicted plasma β-carotene (ng/ml)") +
ylab("Residual") +
labs(tag = "B") +
labs(title = "Residuals vs log predicted values Y-hat")
#### Make a Q-Q-plot and a histogram for the residuals.
ggplot(data = logplasmaB_bmi, aes(sample = e)) +
geom_qq(size = 3) + geom_qq_line() +
labs(tag = "C") +
labs(title = "Normal Q-Q-plot of the residuals")
ggplot(data = logplasmaB_bmi, aes(x = e)) +
geom_bar() + scale_x_binned()
## 1(b)
CI_coeffs <- confint(logplasmaB_bmi_lm)
logplasmaB_bmi_lm
CI_coeffs <- mutate(logplasmaB_bmi_lm$Coeffcients, CI_coeffs)
#Plot the data together with the fitted line,
#a 95 % confidence interval for the fitted line and
#a 95 % prediction interval for new observations.
c(min(plasmaB_bmi$bmi), max(plasmaB$bmi))
bmi_seq <- data.frame(bmi = seq(16.5, 50))
bmi_seq
bmi_seq |> mutate(
fit = predict(logplasmaB_bmi_lm, newdata = bmi_seq),
conf = predict(logplasmaB_bmi_lm, newdata = bmi_seq, interval = "confidence"),
pred = predict(logplasmaB_bmi_lm, newdata = bmi_seq, interval = "prediction")) ->
logplasmaB_bmi_ints
glimpse(logplasmaB_bmi_ints)
head(logplasmaB_bmi_ints)
logplasmaB_bmi_ints$pred[, "fit"]
ggplot(logplasmaB_bmi_ints, aes(x = bmi)) +
geom_point(data = logplasmaB_bmi, aes(y = logbetaplasma), size = 3) +
geom_line(aes(y = fit), color = "blue", linewidth = 1) +
geom_ribbon(aes(ymin = conf[, "lwr"], ymax = conf[, "upr"]), alpha = 0.2) +
geom_line(aes(y = pred[, "lwr"]), color = "red", linetype = "dashed", linewidth = 1) +
geom_line(aes(y = pred[, "upr"]), color = "red", linetype = "dashed", linewidth = 1) +
xlab("bmi") +
ylab("Log Plasma β-carotene (ng/ml)") +
labs(title = "Log Plasma β-carotene level varies with BMI",
caption = "data, fitted line, 95% confidence and prediction intervals")
###Transform the relationship back to betaplasma =e^Beta0*e^Beta1*bmi*e^epsiloni
logplasmaB_bmi_ints
backlogplasmaB_bmi_ints <- logplasmaB_bmi_ints %>%
mutate(across(-bmi, exp))
backlogplasmaB_bmi_ints
ggplot(backlogplasmaB_bmi_ints, aes(x = bmi)) +
geom_point(data = plasmaB_bmi, aes(y = betaplasma), size = 3) +
geom_line(aes(y = fit), color = "blue", linewidth = 1) +
geom_ribbon(aes(ymin = conf[, "lwr"], ymax = conf[, "upr"]), alpha = 0.2) +
geom_line(aes(y = pred[, "lwr"]), color = "red", linetype = "dashed", linewidth = 1) +
geom_line(aes(y = pred[, "upr"]), color = "red", linetype = "dashed", linewidth = 1) +
xlab("bmi") +
ylab("Plasma β-carotene (ng/ml)") +
labs(title = "Plasma β-carotene level varies with BMI",
caption = "data, fitted line, 95% confidence and prediction intervals")
ggplot(backlogplasmaB_bmi_ints, aes(x = bmi)) +
geom_point(data = plasmaB_bmi, aes(y = betaplasma), size = 3) +
geom_line(aes(y = fit), color = "blue", linewidth = 1) +
geom_ribbon(aes(ymin = conf[, "lwr"], ymax = conf[, "upr"]), alpha = 0.2) +
geom_line(aes(y = pred[, "lwr"]), color = "red", linetype = "dashed", linewidth = 1) +
geom_line(aes(y = pred[, "upr"]), color = "red", linetype = "dashed", linewidth = 1) +
xlab("bmi") +
ylab("Plasma β-carotene (ng/ml)") +
labs(title = "Plasma β-carotene level varies with BMI",
caption = "data, fitted line, 95% confidence and prediction intervals")
## 1(c)
### (i) When BMI is increased by 1 unit
plasmaB_bmiplus1_lm <- lm(betaplasma ~ I(bmi + 1), data = plasmaB_bmi)
plasmaB_bmiplus1_lm
confint(plasmaB_bmiplus1_lm)
### (ii) When BMI is decreased by 1 unit
plasmaB_bmiminus1_lm <- lm(betaplasma ~ I(bmi - 1), data = plasmaB_bmi)
ggplot(backlogplasmaB_bmi_ints, aes(x = bmi)) +
geom_point(data = plasmaB_bmi, aes(y = betaplasma), size = 3) +
geom_line(aes(y = fit), color = "blue", linewidth = 1) +
geom_ribbon(aes(ymin = conf[, "lwr"], ymax = conf[, "upr"]), alpha = 0.2) +
geom_line(aes(y = pred[, "lwr"]), color = "red", linetype = "dashed", linewidth = 1) +
geom_line(aes(y = pred[, "upr"]), color = "red", linetype = "dashed", linewidth = 1) +
xlab("bmi") +
ylab("Plasma β-carotene (ng/ml)") +
labs(title = "Plasma β-carotene level varies with BMI",
caption = "data, fitted line, 95% confidence and prediction intervals")
## 1(c)
### (i) When BMI is increased by 1 unit
plasmaB_bmiplus1_lm <- lm(betaplasma ~ I(bmi + 1), data = plasmaB_bmi)
plasmaB_bmiplus1_lm
confint(plasmaB_bmiplus1_lm)
### (ii) When BMI is decreased by 1 unit
plasmaB_bmiminus1_lm <- lm(betaplasma ~ I(bmi - 1), data = plasmaB_bmi)
confint(plasmaB_bmiminus1_lm)
confint(plasmaB_bmi_lm)
### (iii) When BMI is decreased by 10 unit
plasmaB_bmiminus10_lm <- lm(betaplasma ~ I(bmi - 10), data = plasmaB_bmi)
confint(plasmaB_bmiminus10_lm)
#2 Plasma β-carotene and smoking habit
## 2(a), turn the categorical variable smokstat into a factor variable
glimpse(plasmaB)
mutate(plasmaB,
smokstat = factor(smokstat,
levels = c(1, 2, 3),
labels = c("never", "former", "current"))) -> plasmaB
plasmaB$soil <- NULL
glimpse(plasmaB)
plasmaB_lm <- lm(betaplasma ~ smokstat, data = plasmaB)
plasmaB_sum <- summary(plasmaB_lm)
plasmaB_sum
confint(plasmaB_lm)
plasmaB_x0 <- data.frame(smokstat = c("never", "former", "current"))
cbind(plasmaB_x0,
predict(plasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(plasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(plasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(plasmaB_sum$sigma^2 + se.fit^2))
logplasmaB_lm <- lm(log(betaplasma) ~ smokstat, data = plasmaB)
logplasmaB_lm
logplasmaB_sum <- summary(logplasmaB_lm)
logplasmaB_sum
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
# ANSWER: which category would be suited to use as reference category
# Never??? Maybe
?boxplot
boxplot(plasmaB)
# Create boxplots & violin plots for plasma β-carotene
p1 <- ggplot(plasmaB, aes(x = smokstat, y = betaplasma, fill = smokstat)) +
geom_violin(alpha = 0.5) +  # Violin plot
geom_boxplot(width = 0.2, outlier.shape = NA) +  # Boxplot overlay
theme_minimal() +
labs(title = "Plasma β-Carotene by Smoking Status",
x = "Smoking Status",
y = "Plasma β-Carotene (mg/kg)") +
scale_fill_brewer(palette = "Pastel1")
p1
p2 <- ggplot(plasmaB, aes(x = smokstat, y = log(betaplasma), fill = smokstat)) +
geom_violin(alpha = 0.5) +  # Violin plot
geom_boxplot(width = 0.2, outlier.shape = NA) +  # Boxplot overlay
theme_minimal() +
labs(title = "Log Plasma β-Carotene by Smoking Status",
x = "Smoking Status",
y = "Log Plasma β-Carotene (mg/kg)") +
scale_fill_brewer(palette = "Pastel1")
p2
# Create boxplots & violin plots for plasma β-carotene
p1 <- ggplot(plasmaB, aes(x = smokstat, y = betaplasma, fill = smokstat)) +
geom_violin(alpha = 0.5) +  # Violin plot
geom_boxplot(width = 0.2, outlier.shape = NA) +  # Boxplot overlay
theme_minimal() +
labs(title = "Plasma β-Carotene by Smoking Status",
x = "Smoking Status",
y = "Plasma β-Carotene (mg/kg)") +
scale_fill_brewer(palette = "Pastel1")
p1
p2 <- ggplot(plasmaB, aes(x = smokstat, y = log(betaplasma), fill = smokstat)) +
geom_violin(alpha = 0.5) +  # Violin plot
geom_boxplot(width = 0.2, outlier.shape = NA) +  # Boxplot overlay
theme_minimal() +
labs(title = "Log Plasma β-Carotene by Smoking Status",
x = "Smoking Status",
y = "Log Plasma β-Carotene (mg/kg)") +
scale_fill_brewer(palette = "Pastel1")
p2
## 2(b)
# "never" as reference
plasmaB <- mutate(plasmaB, smokstat = relevel(smokstat, "never"))
# B0 is "never", B1 "former", B2 "current"
logplasmaB_lm <- lm(log(betaplasma) ~ smokstat, data = plasmaB)
logplasmaB_sum <- summary(logplasmaB_lm)
logplasmaB_sum
# "current" as reference
# B0 is "current", B1 is "never", B2 is "never"
plasmaB_current <- mutate(plasmaB, smokstat = relevel(smokstat, "current"))
# B0 is "never", B1 "former", B2 "current"
logplasmaB_current_lm <- lm(log(betaplasma) ~ smokstat, data = plasmaB_current)
logplasmaB_current_sum <- summary(logplasmaB_current_lm)
logplasmaB_current_sum
## 2(c)
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
cbind(plasmaB_x0,
predict(logplasmaB_current_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_current_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_current_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_current_sum$sigma^2 + se.fit^2))
## 2(c)
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
cbind(plasmaB_x0,
predict(logplasmaB_current_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_current_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_current_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_current_sum$sigma^2 + se.fit^2))
## 2(c)
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
cbind(plasmaB_x0,
predict(logplasmaB_current_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_current_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_current_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_current_sum$sigma^2 + se.fit^2))
#Project1####
library(tidyverse)
getwd()  # Check current working directory
list.files("Data")  # Check if 'carotene.xlsx' is inside the "Data" folder
install.packages("readxl")  # Only run once if not installed
library(readxl)
library(dplyr)  # Load dplyr for select()
plasmaB <- read_excel("Data/carotene.xlsx")
plasmaB_bmi <- select(plasmaB, bmi, betaplasma)
plasmaB_bmi
#1 Plasma β-carotene and body mass index
##1(a)
###Linear model
summary(plasmaB)
library(dplyr)  # Load dplyr for select()
plasmaB <- read_excel("Data/carotene.xlsx")
plasmaB_bmi <- select(plasmaB, bmi, betaplasma)
plasmaB_bmi
#1 Plasma β-carotene and body mass index
##1(a)
###Linear model
summary(plasmaB)
head(plasmaB)
plasmaB_bmi_lm <- lm(betaplasma ~ bmi, data = plasmaB_bmi)
plasmaB_bmi_lm
plasmaB_bmi <- mutate(plasmaB_bmi, yhat = predict(plasmaB_bmi_lm))
head(plasmaB_bmi)
plasmaB_bmi <- mutate(plasmaB_bmi, e = plasmaB_bmi_lm$residuals)
glimpse(plasmaB_bmi)
plasmaB_elims <- max(abs(plasmaB_bmi$e))*c(-1, 1)
plasmaB_elims
ggplot(data = plasmaB_bmi, aes(x = yhat, y = e)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_smooth() +
expand_limits(y = plasmaB_elims) +
xlab("Predicted plasma β-carotene (ng/ml)") +
ylab("Residual") +
labs(tag = "B") +
labs(title = "Residuals vs predicted values Y-hat")
ggplot(data = plasmaB_bmi, aes(x = e)) +
geom_bar() + scale_x_binned() +
labs(title = "Histogram for the residuals model 1")
###Logarithm model
ggplot(plasmaB_bmi, aes(x = bmi, y = log(betaplasma))) + geom_point()
logplasmaB_bmi_lm <- lm(log(betaplasma) ~ bmi, data = plasmaB_bmi)
logplasmaB_bmi_lm
logplasmaB_bmi <- plasmaB_bmi %>% mutate(logbetaplasma = log(plasmaB_bmi$betaplasma))
logplasmaB_bmi$yhat <- NULL
logplasmaB_bmi$e <- NULL
logplasmaB_bmi
logplasmaB_bmi <- mutate(logplasmaB_bmi, yhat = predict(logplasmaB_bmi_lm))
head(logplasmaB_bmi)
logplasmaB_bmi <- mutate(logplasmaB_bmi, e = logplasmaB_bmi_lm$residuals)
glimpse(logplasmaB_bmi)
logplasmaB_elims <- max(abs(logplasmaB_bmi$e))*c(-1, 1)
logplasmaB_elims
ggplot(data = logplasmaB_bmi, aes(x = yhat, y = e)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_smooth() +
expand_limits(y = logplasmaB_elims) +
xlab("Logarithm predicted plasma β-carotene (ng/ml)") +
ylab("Residual") +
labs(tag = "B") +
labs(title = "Residuals vs log predicted values Y-hat")
#### Make a Q-Q-plot and a histogram for the residuals.
ggplot(data = logplasmaB_bmi, aes(sample = e)) +
geom_qq(size = 3) + geom_qq_line() +
labs(tag = "C") +
labs(title = "Normal Q-Q-plot of the residuals")
ggplot(data = logplasmaB_bmi, aes(x = e)) +
geom_bar() + scale_x_binned()
## 1(b)
CI_coeffs <- confint(logplasmaB_bmi_lm)
logplasmaB_bmi_lm
CI_coeffs <- mutate(logplasmaB_bmi_lm$Coeffcients, CI_coeffs)
#Plot the data together with the fitted line,
#a 95 % confidence interval for the fitted line and
#a 95 % prediction interval for new observations.
c(min(plasmaB_bmi$bmi), max(plasmaB$bmi))
bmi_seq <- data.frame(bmi = seq(16.5, 50))
bmi_seq
bmi_seq |> mutate(
fit = predict(logplasmaB_bmi_lm, newdata = bmi_seq),
conf = predict(logplasmaB_bmi_lm, newdata = bmi_seq, interval = "confidence"),
pred = predict(logplasmaB_bmi_lm, newdata = bmi_seq, interval = "prediction")) ->
logplasmaB_bmi_ints
glimpse(logplasmaB_bmi_ints)
head(logplasmaB_bmi_ints)
logplasmaB_bmi_ints$pred[, "fit"]
ggplot(logplasmaB_bmi_ints, aes(x = bmi)) +
geom_point(data = logplasmaB_bmi, aes(y = logbetaplasma), size = 3) +
geom_line(aes(y = fit), color = "blue", linewidth = 1) +
geom_ribbon(aes(ymin = conf[, "lwr"], ymax = conf[, "upr"]), alpha = 0.2) +
geom_line(aes(y = pred[, "lwr"]), color = "red", linetype = "dashed", linewidth = 1) +
geom_line(aes(y = pred[, "upr"]), color = "red", linetype = "dashed", linewidth = 1) +
xlab("bmi") +
ylab("Log Plasma β-carotene (ng/ml)") +
labs(title = "Log Plasma β-carotene level varies with BMI",
caption = "data, fitted line, 95% confidence and prediction intervals")
###Transform the relationship back to betaplasma =e^Beta0*e^Beta1*bmi*e^epsiloni
logplasmaB_bmi_ints
backlogplasmaB_bmi_ints <- logplasmaB_bmi_ints %>%
mutate(across(-bmi, exp))
backlogplasmaB_bmi_ints
ggplot(backlogplasmaB_bmi_ints, aes(x = bmi)) +
geom_point(data = plasmaB_bmi, aes(y = betaplasma), size = 3) +
geom_line(aes(y = fit), color = "blue", linewidth = 1) +
geom_ribbon(aes(ymin = conf[, "lwr"], ymax = conf[, "upr"]), alpha = 0.2) +
geom_line(aes(y = pred[, "lwr"]), color = "red", linetype = "dashed", linewidth = 1) +
geom_line(aes(y = pred[, "upr"]), color = "red", linetype = "dashed", linewidth = 1) +
xlab("bmi") +
ylab("Plasma β-carotene (ng/ml)") +
labs(title = "Plasma β-carotene level varies with BMI",
caption = "data, fitted line, 95% confidence and prediction intervals")
## 1(c)
### (i) When BMI is increased by 1 unit
plasmaB_bmiplus1_lm <- lm(betaplasma ~ I(bmi + 1), data = plasmaB_bmi)
plasmaB_bmiplus1_lm
confint(plasmaB_bmiplus1_lm)
### (ii) When BMI is decreased by 1 unit
plasmaB_bmiminus1_lm <- lm(betaplasma ~ I(bmi - 1), data = plasmaB_bmi)
confint(plasmaB_bmiminus1_lm)
confint(plasmaB_bmi_lm)
### (iii) When BMI is decreased by 10 unit
plasmaB_bmiminus10_lm <- lm(betaplasma ~ I(bmi - 10), data = plasmaB_bmi)
confint(plasmaB_bmiminus10_lm)
#2 Plasma β-carotene and smoking habit
## 2(a), turn the categorical variable smokstat into a factor variable
glimpse(plasmaB)
mutate(plasmaB,
smokstat = factor(smokstat,
levels = c(1, 2, 3),
labels = c("never", "former", "current"))) -> plasmaB
plasmaB$soil <- NULL
glimpse(plasmaB)
plasmaB_lm <- lm(betaplasma ~ smokstat, data = plasmaB)
plasmaB_sum <- summary(plasmaB_lm)
plasmaB_sum
confint(plasmaB_lm)
plasmaB_x0 <- data.frame(smokstat = c("never", "former", "current"))
cbind(plasmaB_x0,
predict(plasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(plasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(plasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(plasmaB_sum$sigma^2 + se.fit^2))
logplasmaB_lm <- lm(log(betaplasma) ~ smokstat, data = plasmaB)
logplasmaB_lm
logplasmaB_sum <- summary(logplasmaB_lm)
logplasmaB_sum
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
# ANSWER: which category would be suited to use as reference category
# Never??? Maybe
?boxplot
boxplot(plasmaB)
# Create boxplots & violin plots for plasma β-carotene
p1 <- ggplot(plasmaB, aes(x = smokstat, y = betaplasma, fill = smokstat)) +
geom_violin(alpha = 0.5) +  # Violin plot
geom_boxplot(width = 0.2, outlier.shape = NA) +  # Boxplot overlay
theme_minimal() +
labs(title = "Plasma β-Carotene by Smoking Status",
x = "Smoking Status",
y = "Plasma β-Carotene (mg/kg)") +
scale_fill_brewer(palette = "Pastel1")
p1
p2 <- ggplot(plasmaB, aes(x = smokstat, y = log(betaplasma), fill = smokstat)) +
geom_violin(alpha = 0.5) +  # Violin plot
geom_boxplot(width = 0.2, outlier.shape = NA) +  # Boxplot overlay
theme_minimal() +
labs(title = "Log Plasma β-Carotene by Smoking Status",
x = "Smoking Status",
y = "Log Plasma β-Carotene (mg/kg)") +
scale_fill_brewer(palette = "Pastel1")
p2
## 2(b)
# "never" as reference
plasmaB <- mutate(plasmaB, smokstat = relevel(smokstat, "never"))
# B0 is "never", B1 "former", B2 "current"
logplasmaB_lm <- lm(log(betaplasma) ~ smokstat, data = plasmaB)
logplasmaB_sum <- summary(logplasmaB_lm)
logplasmaB_sum
# "current" as reference
# B0 is "current", B1 is "never", B2 is "never"
plasmaB_current <- mutate(plasmaB, smokstat = relevel(smokstat, "current"))
# B0 is "never", B1 "former", B2 "current"
logplasmaB_current_lm <- lm(log(betaplasma) ~ smokstat, data = plasmaB_current)
logplasmaB_current_sum <- summary(logplasmaB_current_lm)
logplasmaB_current_sum
## 2(c)
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
cbind(plasmaB_x0,
predict(logplasmaB_current_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_current_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_current_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_current_sum$sigma^2 + se.fit^2))
logplasmaB_current_sum
logplasmaB_sum
## 2(c)
cbind(plasmaB_x0,
predict(logplasmaB_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_sum$sigma^2 + se.fit^2))
cbind(plasmaB_x0,
predict(logplasmaB_current_lm, plasmaB_x0, se.fit = TRUE),
conf = predict(logplasmaB_current_lm, plasmaB_x0, interval = "confidence"),
pred = predict(logplasmaB_current_lm, plasmaB_x0, interval = "prediction")) |>
mutate(df = NULL, residual.scale = NULL,
conf.fit = NULL, pred.fit = NULL,
se.pred = sqrt(logplasmaB_current_sum$sigma^2 + se.fit^2))
